[tool.poetry]
name = "template-py-package"
version = "0.1.0"
description = "A small example package"
authors = ["ksk0629 <neko.to.tomodachi.muse@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "example_package", from = "src" }]
repository = "https://github.com/ksk0629/template_py_package"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
]

[tool.poetry.dependencies]
python = "^3.13"

[tool.poetry.scripts]
run_example = "src.example_package.example:main"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
pytest-cov = "^6.0.0"
sphinx = "^8.2.3"
black = "^25.1.0"
jupyter = "^1.1.1"
notebook = "^7.3.2"
sphinx-rtd-theme = "^3.0.2"
mypy = "^1.15.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
show_error_context = true
show_column_numbers = true
ignore_missing_imports = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_return_any = true
check_untyped_defs = true

[tool.pytest.ini_options]
markers = [
    "add_number: marks tests for add_number function",
    "example_class: marks tests for ExmapleClass Class"
]
pythonpath = "./src"
testpaths = ["tests",]